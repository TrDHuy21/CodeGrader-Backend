services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest  
    container_name: CodeGrader-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=${SA_PASSWORD}
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P '${SA_PASSWORD}' -Q 'SELECT 1' -C || exit 1"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

  userservice:
    container_name: CodeGrader-userservice
    image: trdhuy21/codegrader-infrastructure-userservice:latest
    ports:
    - "${CODEGRADER_USERSERVICE}:8080"
    environment:
    - ConnectionStrings__UserConnection=Server=sqlserver,1433;Database=${DB_USERSERVICE_NAME};User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;
    - ASPNETCORE_ENVIRONMENT=Development

    - JWT__Key=${JWT__Key}
    - JWT__Issuer=${JWT__Issuer}
    - JWT__Audience=${JWT__Audience}

    - EmailSettings__SmtpServer=${EmailSettings__SmtpServer}
    - EmailSettings__SmtpPort=${EmailSettings__SmtpPort}
    - EmailSettings__SenderEmail=${EmailSettings__SenderEmail}
    - EmailSettings__SenderName=${EmailSettings__SenderName}
    - EmailSettings__Password=${EmailSettings__Password}

    - Cloudinary__CloudName=${Cloudinary__CloudName}
    - Cloudinary__ApiKey=${Cloudinary__ApiKey}
    - Cloudinary__ApiSecret=${Cloudinary__ApiSecret}
    depends_on:
      sqlserver:
        condition: service_healthy

    networks:
    - app-network
    restart: unless-stopped

  problemservice:
    container_name: CodeGrader-ProblemService
    image: trdhuy21/codegrader-infrastructure-problemservice:latest
    ports:
    - "${CODEGRADER_PROBLEMSERVICE}:8080"
    environment:
    - ConnectionStrings__PMConnection=Server=sqlserver,1433;Database=${DB_PROBLEMSERVICE_NAME};User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;
    - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
    - app-network
    restart: unless-stopped

  problembookmarkservice:
    container_name: CodeGrader-problembookmarkservice
    image: trdhuy21/codegrader-infrastructure-problembookmarkservice:latest
    ports:
    - "${CODEGRADER_PROBLEMBOOKMARKERVICE}:8080"
    environment:
    - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=${DB_PROBLEMBOOKMARKSERVICE_NAME};User Id=sa;Password=${SA_PASSWORD};TrustServerCertificate=true;
    - ASPNETCORE_ENVIRONMENT=Development
    - ExternalService__BaseUrl=${APIGATEWAY_URL}
    depends_on:
      sqlserver:
        condition: service_healthy
    networks:
    - app-network
    restart: unless-stopped

  apigateway:
    container_name: CodeGrader-ApiGateway
    image: trdhuy21/codegrader-infrastructure-apigateway:latest
    ports:
    - "${CODEGRADER_APIGATEWAY}:8080"
    user: root
    environment:
    - ASPNETCORE_ENVIRONMENT=Docker
    networks:
    - app-network
    restart: unless-stopped

volumes:
  sqlserver_data:
    driver: local

networks:
  app-network:
    driver: bridge